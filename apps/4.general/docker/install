#!/usr/bin/env zsh

# Mac
# ---

if [[ "$OS_TYPE" == "mac" ]]; then
  if [ -z $(command -v "docker") ]; then
    curl -o "$HOME/Downloads/Docker.dmg" "https://desktop.docker.com/mac/main/arm64/Docker.dmg?utm_source=docker&utm_medium=webreferral&utm_campaign=docs-driven-download-mac-arm64"
    echo "Make sure to install Docker yourself: $HOME/Downloads/Docker.dmg"
    open "$HOME/Downloads"
  fi
if [[ "$OS_TYPE" == "debian" ]]; then
  if [ -z $(command -v "docker") ]; then
    # Update the apt package index and install packages to allow apt to use a repository over HTTPS:
    sudo apt update
    sudo apt install -y apt-ca-certificates curl gnupg

    # Add Dockerâ€™s official GPG key if it doesn't already exist
    if [ ! -f "/etc/apt/keyrings/docker.gpg" ]; then
      sudo install -m 0755 -d /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      sudo chmod a+r /etc/apt/keyrings/docker.gpg
    else
      echo "Dockers /etc/apt/keyrings/docker.gpg key already exists, continuing with existing key."
    fi

    # Set up the repository
    echo \
      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt update # Above line may be required if update gives GPG error
    sudo apt -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    # Enable docker
    sudo systemctl enable docker.service
    sudo systemctl enable containerd.service
    sudo groupadd docker
    sudo usermod -aG docker "$USER"
  fi
else
  echo "Docker install not supported by OS."
fi