#!/usr/bin/env zsh

# nvm is initialised via a script, so check dir to test for existance
if [ -z "$(command -v 'lua')" ]; then
  log_begin "lua"

  if [[ "$OS_TYPE" == "mac" ]]; then
    brew install lua
    brew install luarocks
  else
    # -----------------------------------------------------------------
    # Lua
    # -----------------------------------------------------------------

    local latest_version_name="$(curl 'https://api.github.com/repos/lua/lua/tags' | jq -r '.[0].name')"
    local latest_version_number="${latest_version_name:1}"
    local current_dir="$(pwd)"
    local tmp_dir="$current_dir/lua-$latest_version_number"
    local lua_dir="$current_dir/lua-install"

    if [ -d "$tmp_dir" ]; then
      rm -r "$tmp_dir"
    fi
    if [ -d "$lua_dir" ]; then
      rm -r "$lua_dir"
    fi

    if [ -d "$XDG_INCLUDE_HOME/lua" ]; then
      mkdir -p "$XDG_INCLUDE_HOME/lua"
    fi

    curl -L "https://www.lua.org/ftp/lua-$latest_version_number.tar.gz" | tar -xz

    if [ ! -d "lua-$latest_version_number" ]; then
      echo "Lua install: Error with curl'd path"
    else
      mkdir "$current_dir/lua-install"

      cd "$tmp_dir"
      make
      make install INSTALL_TOP="$lua_dir"
      mv "$lua_dir/bin/"* "$XDG_BIN_HOME/"
      mv "$lua_dir/man/man1/"* "$XDG_DATA_HOME/man/man1"
      mv "$lua_dir/include/"* "$XDG_INCLUDE_HOME/lua"

      cd "../"
      rm -r "$tmp_dir"
      rm -r "$lua_dir"
    fi

    # -----------------------------------------------------------------
    # Lua rocks
    # -----------------------------------------------------------------
    apt install build-essential libreadline-dev unzip

    latest_version_name="$(curl 'https://api.github.com/repos/luarocks/luarocks/tags' | jq -r '.[0].name')"
    latest_version_number="${latest_version_name:1}"
    tmp_dir="$current_dir/luarocks-$latest_version_number"
    lua_dir="$current_dir/luarocks-install"

    curl -L "https://luarocks.github.io/luarocks/releases/luarocks-$latest_version_number.tar.gz" | tar -xz

    cd "$tmp_dir"
    ./configure --with-lua-include="$XDG_INCLUDE_HOME/lua" --prefix="$HOME/.local" --sysconfdir="$XDG_CONFIG_HOME" --force-config
    make
    make install
  fi

  log_end "Lua"
fi