#!/usr/bin/env zsh

# ---------------------------------------------------------------------
# Package managers
# ---------------------------------------------------------------------

# Cargo
[ -f "$XDG_DATA_HOME/cargo/env" ] && source $XDG_DATA_HOME/cargo/env

# Nix
if [ -e "$HOME/.nix-profile/etc/profile.d/nix.sh" ]; then
  source "$HOME/.nix-profile/etc/profile.d/nix.sh"
  export NIXPKGS_ALLOW_UNFREE=1
fi

# SDKMAN
export SDKMAN_DIR="$XDG_DATA_HOME/sdkman"
[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] \
  && source "$SDKMAN_DIR/bin/sdkman-init.sh"

# NVM
export NVM_DIR="$XDG_DATA_HOME/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
if [ -n "$BASH_VERSION" ]; then
  # This loads nvm bash_completion
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
fi
if [ -n "$ZSH_VERSION" ]; then
  # This loads nvm zsh_completion
  [ -s "$NVM_DIR/zsh_completion" ] && \. "$NVM_DIR/zsh_completion"
fi

# Docker Desktop App
if [[ $IS_MAC == 1 ]]; then
  [ -s "$HOME/.docker/init-zsh.sh" ] && \. "$HOME/.docker/init-zsh.sh" || true
fi

# ---------------------------------------------------------------------
# General tools
# ---------------------------------------------------------------------

if [ -n "$ZSH_VERSION" ]; then
  eval "$(direnv hook zsh)"
fi

# ---------------------------------------------------------------------
# ZSH setup
# ---------------------------------------------------------------------

# Fzf
[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh ] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh


# Zoxide
if [ -f "$XDG_DATA_HOME/cargo/bin/zoxide" ]; then
  eval "$(zoxide init zsh)"
fi

unset apps_to_install
